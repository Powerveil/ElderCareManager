<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.AllocationMapper">
    
    <resultMap type="Allocation" id="AllocationResult">
        <result property="id"    column="id"    />
        <result property="supportWorkerId"    column="support_worker_id"    />
        <result property="elderId"    column="elder_id"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectAllocationVo">
        select id, support_worker_id, elder_id, create_time, update_time from allocation
    </sql>

    <select id="selectAllocationList" parameterType="Allocation" resultMap="AllocationResult">
        <include refid="selectAllocationVo"/>
        <where>  
            <if test="supportWorkerId != null "> and support_worker_id = #{supportWorkerId}</if>
            <if test="elderId != null "> and elder_id = #{elderId}</if>
        </where>
    </select>
    
    <select id="selectAllocationById" parameterType="Long" resultMap="AllocationResult">
        <include refid="selectAllocationVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertAllocation" parameterType="Allocation" useGeneratedKeys="true" keyProperty="id">
        insert into allocation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="supportWorkerId != null">support_worker_id,</if>
            <if test="elderId != null">elder_id,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="supportWorkerId != null">#{supportWorkerId},</if>
            <if test="elderId != null">#{elderId},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>
    <insert id="insertAllocationBatch01">
        insert into allocation (support_worker_id, elder_id)
        values
        <foreach collection="elderIdListSub" item="elderId" separator=",">
            (#{supportWorkerId}, #{elderId})
        </foreach>
    </insert>

    <update id="updateAllocation" parameterType="Allocation">
        update allocation
        <trim prefix="SET" suffixOverrides=",">
            <if test="supportWorkerId != null">support_worker_id = #{supportWorkerId},</if>
            <if test="elderId != null">elder_id = #{elderId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>
    <select id="count" resultType="java.lang.Integer">
        select count(elder_id)
        from allocation
    </select>

    <delete id="deleteAllocationById" parameterType="Long">
        delete from allocation where id = #{id}
    </delete>

    <delete id="deleteAllocationByIds" parameterType="String">
        delete from allocation where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>